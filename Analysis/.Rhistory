install.packages('ggplot2')
install.packages('reshape2')
install.packages('plyr')
#Without hypothesis priors one should change their policy based on whether the
#context is > 0
#With recursive transition probability = .9, given you are in state 1, you
#should wait until the context = -.5 with these values:
mu1 = .3
mu2 = -.3
sd1 = .37
sd2 = .37
#calculate overlap of two normal distributions
min.f1f2 <- function(x, mu1, mu2, sd1, sd2) {
f1 <- dnorm(x, mean=mu1, sd=sd1)
f2 <- dnorm(x, mean=mu2, sd=sd2)
pmin(f1, f2)
}
integrate(min.f1f2, -Inf, Inf, mu1=mu1, mu2=mu2, sd1=sd1, sd2=sd2)
#graph the two distributions and their relative likelihood assuming a flat prior
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2)/
(dnorm(x,mean = mu2, sd = sd2)+dnorm(x,mean = mu1, sd = sd1)),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,2), col = 'red')
#show relative likelihood including a recursive transition probability of .9
#dashed line shows the likelihood given that one is in state 2 (mu = mu2)
#dotted line shows likelihood given one is in state 1
relative_probabilities = function(x,prior1, prior2) {
dnorm(x,mean = mu1, sd = sd1)*prior1/
(dnorm(x,mean = mu2, sd = sd2)*prior2+
dnorm(x,mean = mu1, sd = sd1)*prior1)
}
curve(relative_probabilities(x,.5,.5),-1,1,ylim=c(0,1),
ylab = "Posterior P(TS 1)", xlab = "Shade Context (Black to White)")
par(new = T)
curve(relative_probabilities(x,.9,.1),-1,1,ylim=c(0,1),
col = 'red',xlab = "", ylab = "")
par(new = T)
curve(relative_probabilities(x,.1,.9),-1,1,ylim=c(0,1), col = 'blue',
xlab = "", ylab = "")
title("Effect of prior")
legend("bottomright",  legend = c("P(TS 1) = .5","P(TS 1) = .9","P(TS 1) = .1"),
lty=c(1,1,1), col=c(1,2,4),ncol=1, cex = .8)
#Without hypothesis priors one should change their policy based on whether the
#context is > 0
#With recursive transition probability = .9, given you are in state 1, you
#should wait until the context = -.5 with these values:
mu1 = -.3
mu2 = .3
sd1 = .37
sd2 = .37
#calculate overlap of two normal distributions
min.f1f2 <- function(x, mu1, mu2, sd1, sd2) {
f1 <- dnorm(x, mean=mu1, sd=sd1)
f2 <- dnorm(x, mean=mu2, sd=sd2)
pmin(f1, f2)
}
integrate(min.f1f2, -Inf, Inf, mu1=mu1, mu2=mu2, sd1=sd1, sd2=sd2)
#Without hypothesis priors one should change their policy based on whether the
#context is > 0
#With recursive transition probability = .9, given you are in state 1, you
#should wait until the context = -.5 with these values:
mu1 = -.3
mu2 = .3
sd1 = .37
sd2 = .37
#calculate overlap of two normal distributions
min.f1f2 <- function(x, mu1, mu2, sd1, sd2) {
f1 <- dnorm(x, mean=mu1, sd=sd1)
f2 <- dnorm(x, mean=mu2, sd=sd2)
pmin(f1, f2)
}
integrate(min.f1f2, -Inf, Inf, mu1=mu1, mu2=mu2, sd1=sd1, sd2=sd2)
#graph the two distributions and their relative likelihood assuming a flat prior
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2)/
(dnorm(x,mean = mu2, sd = sd2)+dnorm(x,mean = mu1, sd = sd1)),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,2), col = 'red')
#show relative likelihood including a recursive transition probability of .9
#dashed line shows the likelihood given that one is in state 2 (mu = mu2)
#dotted line shows likelihood given one is in state 1
relative_probabilities = function(x,prior1, prior2) {
dnorm(x,mean = mu1, sd = sd1)*prior1/
(dnorm(x,mean = mu2, sd = sd2)*prior2+
dnorm(x,mean = mu1, sd = sd1)*prior1)
}
curve(relative_probabilities(x,.5,.5),-1,1,ylim=c(0,1),
ylab = "Posterior P(TS 1)", xlab = "Shade Context (Black to White)")
par(new = T)
curve(relative_probabilities(x,.9,.1),-1,1,ylim=c(0,1),
col = 'red',xlab = "", ylab = "")
par(new = T)
curve(relative_probabilities(x,.1,.9),-1,1,ylim=c(0,1), col = 'blue',
xlab = "", ylab = "")
title("Effect of prior")
legend("bottomright",  legend = c("P(TS 1) = .5","P(TS 1) = .9","P(TS 1) = .1"),
lty=c(1,1,1), col=c(1,2,4),ncol=1, cex = .8)
#graph the two distributions and their relative likelihood assuming a flat prior
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2)/
(dnorm(x,mean = mu2, sd = sd2)+dnorm(x,mean = mu1, sd = sd1)),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,2), col = 'red')
#show relative likelihood including a recursive transition probability of .9
#dashed line shows the likelihood given that one is in state 2 (mu = mu2)
#dotted line shows likelihood given one is in state 1
relative_probabilities = function(x,prior1, prior2) {
dnorm(x,mean = mu1, sd = sd1)*prior1/
(dnorm(x,mean = mu2, sd = sd2)*prior2+
dnorm(x,mean = mu1, sd = sd1)*prior1)
}
curve(relative_probabilities(x,.5,.5),-1,1,ylim=c(0,1),
ylab = "Posterior P(TS 1)", xlab = "Shade Context (Black to White)")
par(new = T)
curve(relative_probabilities(x,.9,.1),-1,1,ylim=c(0,1),
col = 'red',xlab = "", ylab = "")
par(new = T)
curve(relative_probabilities(x,.1,.9),-1,1,ylim=c(0,1), col = 'blue',
xlab = "", ylab = "")
title("Effect of prior")
legend("topright",  legend = c("P(TS 1) = .5","P(TS 1) = .9","P(TS 1) = .1"),
lty=c(1,1,1), col=c(1,2,4),ncol=1, cex = .8)
choice_probabilities = function(x,prior1, prior2, value1, value2) {
dnorm(x,mean = mu1, sd = sd1)*prior1*value1/
(dnorm(x,mean = mu2, sd = sd2)*prior2*value2+
dnorm(x,mean = mu1, sd = sd1)*prior1*value1)
}
curve(choice_probabilities(x,.5,.5,1,2),-1,1,ylim=c(0,1),
ylab = "Posterior P(TS 1)", xlab = "Shade Context (Black to White)")
par(new = T)
curve(choice_probabilities(x,.9,.1,1,2),-1,1,ylim=c(0,1),
col = 'red',xlab = "", ylab = "")
par(new = T)
curve(choice_probabilities(x,.1,.9,1,2),-1,1,ylim=c(0,1), col = 'blue',
xlab = "", ylab = "")
title("Effect of prior")
legend("topright",  legend = c("P(TS 1) = .5","P(TS 1) = .9","P(TS 1) = .1"),
lty=c(1,1,1), col=c(1,2,4),ncol=1, cex = .8)
#graph the two distributions and their relative likelihood assuming a flat prior
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2)/
(dnorm(x,mean = mu2, sd = sd2)+dnorm(x,mean = mu1, sd = sd1)),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,2), col = 'red')
#show relative likelihood including a recursive transition probability of .9
#dashed line shows the likelihood given that one is in state 2 (mu = mu2)
#dotted line shows likelihood given one is in state 1
relative_probabilities = function(x,prior1, prior2) {
dnorm(x,mean = mu1, sd = sd1)*prior1/
(dnorm(x,mean = mu2, sd = sd2)*prior2+
dnorm(x,mean = mu1, sd = sd1)*prior1)
}
curve(relative_probabilities(x,.5,.5),-1,1,ylim=c(0,1),
ylab = "Posterior P(TS 1)", xlab = "Shade Context (Black to White)")
par(new = T)
curve(relative_probabilities(x,.9,.1),-1,1,ylim=c(0,1),
col = 'red',xlab = "", ylab = "")
par(new = T)
curve(relative_probabilities(x,.1,.9),-1,1,ylim=c(0,1), col = 'blue',
xlab = "", ylab = "")
title("Effect of prior")
legend("topright",  legend = c("P(TS 1) = .5","P(TS 1) = .9","P(TS 1) = .1"),
lty=c(1,1,1), col=c(1,2,4),ncol=1, cex = .8)
#incorporate utility, weight probabilities by maximal utility possible
choice_probabilities = function(x,prior1, prior2, value1, value2) {
dnorm(x,mean = mu1, sd = sd1)*prior1*value1/
(dnorm(x,mean = mu2, sd = sd2)*prior2*value2+
dnorm(x,mean = mu1, sd = sd1)*prior1*value1)
}
#graph the two distributions and their relative likelihood assuming a flat prior
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2*2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2)/
(dnorm(x,mean = mu2, sd = sd2)+dnorm(x,mean = mu1, sd = sd1)),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,2), col = 'red')
curve(choice_probabilities(x,.5,.5,1,2),-1,1,ylim=c(0,1),
ylab = "Posterior P(TS 1)", xlab = "Shade Context (Black to White)")
par(new = T)
curve(choice_probabilities(x,.9,.1,1,2),-1,1,ylim=c(0,1),
col = 'red',xlab = "", ylab = "")
par(new = T)
curve(choice_probabilities(x,.1,.9,1,2),-1,1,ylim=c(0,1), col = 'blue',
xlab = "", ylab = "")
title("Effect of prior")
legend("topright",  legend = c("P(TS 1) = .5","P(TS 1) = .9","P(TS 1) = .1"),
lty=c(1,1,1), col=c(1,2,4),ncol=1, cex = .8)
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2*2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2)/
(dnorm(x,mean = mu2, sd = sd2)+dnorm(x,mean = mu1, sd = sd1)),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,2), col = 'red')
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,2))
par(new = T)
curve(2*dnorm(x,mean = mu2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2)/
(dnorm(x,mean = mu2, sd = sd2)+dnorm(x,mean = mu1, sd = sd1)),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,2), col = 'red')
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,3))
par(new = T)
curve(2*dnorm(x,mean = mu2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,2))
par(new = T)
curve(dnorm(x,mean = mu2, sd = sd2)/
(dnorm(x,mean = mu2, sd = sd2)+dnorm(x,mean = mu1, sd = sd1)),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,2), col = 'red')
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,3))
par(new = T)
curve(2*dnorm(x,mean = mu2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,3))
par(new = T)
curve(dnorm(x,mean = mu1, sd = sd1)/
(dnorm(x,mean = mu1, sd = sd1)+dnorm(x,mean = mu2, sd = sd2)*2),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,3), col = 'red')
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,3))
par(new = T)
curve(2*dnorm(x,mean = mu2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,3))
par(new = T)
curve(dnorm(x,mean = mu1, sd = sd1)/
(dnorm(x,mean = mu1, sd = sd1)+dnorm(x,mean = mu2, sd = sd2)),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,3), col = 'red')
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,3))
par(new = T)
curve(2*dnorm(x,mean = mu2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,3))
par(new = T)
curve(dnorm(x,mean = mu1, sd = sd1)/
(dnorm(x,mean = mu1, sd = sd1)+dnorm(x,mean = mu2, sd = sd2)),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,3), col = 'red')
par(new = T)
curve(dnorm(x,mean = mu1, sd = sd1)/
(dnorm(x,mean = mu1, sd = sd1)+dnorm(x,mean = mu2, sd = sd2)*2),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,3), col = 'red')
curve(dnorm(x,mean = mu1, sd = sd1), -1, 1,
ylim = c(0,3))
par(new = T)
curve(2*dnorm(x,mean = mu2, sd = sd2), -1, 1,
yaxt = "n", ylab = "",ylim = c(0,3))
par(new = T)
curve(dnorm(x,mean = mu1, sd = sd1)/
(dnorm(x,mean = mu1, sd = sd1)+dnorm(x,mean = mu2, sd = sd2)*2),
-1, 1, yaxt = "n", ylab = "", ylim = c(0,3), col = 'red')
#Without hypothesis priors one should change their policy based on whether the
#context is > 0
#With recursive transition probability = .9, given you are in state 1, you
#should wait until the context = -.5 with these values:
mu1 = -.3
mu2 = .3
sd1 = .37
sd2 = .37
#calculate overlap of two normal distributions
min.f1f2 <- function(x, mu1, mu2, sd1, sd2) {
f1 <- dnorm(x, mean=mu1, sd=sd1)
f2 <- 2*dnorm(x, mean=mu2, sd=sd2)
pmin(f1, f2)
}
integrate(min.f1f2, -Inf, Inf, mu1=mu1, mu2=mu2, sd1=sd1, sd2=sd2)
x <- seq(from=-1, to=1,by=0.01)
curve(dnorm(x,-.3,.37), xlim=c(-1,1),
xlab = "Gray Spectrum", ylab = "Density")
segments(x, rep(0,length(x)),x,dnorm(x,-.3,.37) ,
col=grey.colors(length(x), start = 0, end = 1), lwd=2)
par(new = T)
curve(dnorm(x,-.3,.37), xlim=c(-1,1), ylab = "", xlab = "", lwd = 2)
curve(dnorm(x,-.3,.37), xlim=c(-1,1),
xlab = "Gray Spectrum", ylab = "Density")
segments(x, rep(0,length(x)),x,dnorm(x,-.3,.37) ,
col=grey.colors(length(x), start = 0, end = 1), lwd=2)
par(new = T)
curve(dnorm(x,.3,.37), xlim=c(-1,1), ylab = "", xlab = "")
segments(x, rep(0,length(x)),x,dnorm(x,.3,.37) ,
col=grey.colors(length(x), start = 0, end = 1), lwd=2)
par(new=T)
curve(dnorm(x,.3,.37), xlim=c(-1,1), ylab = "", xlab = "", lwd = 2)
par(new=T)
curve(dnorm(x,-.3,.37), xlim=c(-1,1), ylab = "", xlab = "", lwd = 2, lty = 3)
#show relative likelihood including a recursive transition probability of .9
#dashed line shows the likelihood given that one is in state 2 (mu = mu2)
#dotted line shows likelihood given one is in state 1
curve(choice_probabilities(x,.5,.5,1,2),-1,1,ylim=c(0,1),
ylab = "Posterior P(TS 1)", xlab = "Shade Context (Black to White)")
par(new = T)
curve(choice_probabilities(x,.9,.1,1,2),-1,1,ylim=c(0,1),
col = 'red',xlab = "", ylab = "")
par(new = T)
curve(choice_probabilities(x,.1,.9,1,2),-1,1,ylim=c(0,1), col = 'blue',
xlab = "", ylab = "")
title("Effect of prior")
legend("topright",  legend = c("P(TS 1) = .5","P(TS 1) = .9","P(TS 1) = .1"),
lty=c(1,1,1), col=c(1,2,4),ncol=1, cex = .8)
dataFiles <- Sys.glob("../Data/*modeled.csv")
dfa = read.csv(dataFiles[2])
dataFiles
dataFiles <- Sys.glob("../Data/*modeled.csv")
dataFiles
dataFiles <- Sys.glob("../Data/*modeled.csv")
dataFiles
dataFiles <- Sys.glob("../Data/*.csv")
dataFiles
setwd("~/Box Sync/Programming/Experiments/Color_Structure/Analysis")
dataFiles <- Sys.glob("../Data/*modeled.csv")
dataFiles
dfa = read.csv(dataFiles[1])
dfa
dfa.head()
head(dfa)
dfa$posterior_ignore
dfa$posterior_ignore[0]
dfa$posterior_ignore
dfa.posterior_ignore
dfa$posterior_ignore
dfa$posterior_ignore[0]
dfa$posterior_ignore[1]
dfa$posterior_ignore[1,]
dfa$posterior_ignore[1]
dfa$posterior_ignore[1][1]
dfa$posterior_ignore[1]
class(dfa$posterior_ignore[1])
dataFiles <- Sys.glob("../Data/*modeled.csv")
dfa = read.csv(dataFiles[1])
dfa$s0_posterior_optimal
dfa$response
dfa$con_shape
glm(con_shape ~ s0_posterior_optimal, family = "binomial", data = dfa)
summary(glm(con_shape ~ s0_posterior_optimal, family = "binomial", data = dfa))
m_optimal = glm(con_shape ~ s0_posterior_optimal, family = "binomial", data = dfa)
m_single = glm(con_shape ~ s0_posterior_single, family = "binomial", data = dfa)
m_ignore = glm(con_shape ~ s0_posterior_ignore, family = "binomial", data = dfa)
anova(m_single,m_ignore)
summary(m_ignore)
summary(m_single)
summary(m_optimal)
anova(m_single,m_ignore)
anova(m_ignore,m_single)
