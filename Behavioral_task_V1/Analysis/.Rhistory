read.csv('stroop.csv')
df = read.csv('stroop.csv')
df
columns(df)
df
str(df)
summary(df)
library('lme4')
lmer('rt ~ condition | worker', df)
library('lm')
library('lmer')
installed.packages('lm')
install.packages('lm')
lm('rt ~ condition', df)
rs = lm('rt ~ condition', df)
rs.summary()
summary(rs)
rs1=lmer('rt ~ condition | worker', df)
summary(rs1)
rs1=lmer('rt ~ condition + (condition | worker)', df)
summary(rs1)
log(3)
rs1=lmer('log(rt) ~ condition + (condition | worker)', df)
summary(rs1)
rs = lm('logrt ~ condition', df)
summary(rs)
rs1=lmer('logrt ~ condition + (condition | worker)', df)
summary(rs1)
log(rt)
rs1=lmer('log(rt) ~ condition + (condition | worker)', df)
rs1=lmer('log(rt) ~ condition + (1 | worker)', df)
df
subset(df, rt!=-1)
subset(df, rt!=-1)
subset(df, rt!=-1).length
length(subset(df, rt!=-1))
df.rt
df['rt']
df['rt']!=-1
df[df['rt']!=-1]
df[df['rt']!=-1,]
df=df[df['rt']!=-1,]
rs = lm('logrt ~ condition', df)
summary(rs)
rs1=lmer('log(rt) ~ condition + (1 | worker)', df)
summary(rs1)
rs1.re
rs1$re
ranef(rs1)
rs1=lmer('log(rt) ~ condition + (0 + condition | worker)', df)
summary(rs1)
df
df$condition
df$condition.as_factor()
factor(df$condition)
df$condition = factor(df$condition)
df$condition
str(df)
rs1=lmer('log(rt) ~ condition + (0 + condition | worker)', df)
summary(rs1)
rs1=lmer('log(rt) ~ condition + (1 + condition | worker)', df)
summary(rs1)
ranef(rs1)
library(plyr)
library(ggplot2)
install.packages('plyr')
install.packages('ggplt2')
install.packages('ggplot2')
install.packages('lme4')
rs1 = glmer(subj_ts ~ context, data = gtest_learn_df)
library(ggplot2)
library(plyr)
library(lme4)
rs1 = glmer(subj_ts ~ context, data = gtest_learn_df)
rs1 = glmer(subj_ts ~ context, data = learner, family = binomial)
learner = read.csv('Analysis_Output/learner.csv')
nonlearner = read.csv('Analysis_Output/nonlearn.csv')
learner = read.csv('Analysis_Output/learner.csv')
ls
setwd("~/Experiments/Prob_Context_Task/Behavioral_task/Analysis")
learner = read.csv('Analysis_Output/learner.csv')
setwd("/media/Data/Ian/Experiments/Prob_Context_Task/Behavioral_task/Analysis")
learner = read.csv('Analysis_Output/learners.csv')
nonlearner = read.csv('Analysis_Output/nonlearns.csv')
rs1 = glmer(subj_ts ~ context + (1+context|id), data = learner, family = binomial)
summary(rs1)
learner
learner$context
learner$context.shift(1)
shift(learner$context,1)
learner$context.lag(1)
lag(learner$context)
lag(learner$context,2)
lag(learner$context,-2)
lagpad(learner$context,2)
lagpad <- function(x, k) {
if (!is.vector(x))
stop('x must be a vector')
if (!is.numeric(x))
stop('x must be numeric')
if (!is.numeric(k))
stop('k must be numeric')
if (1 != length(k))
stop('k must be a single number')
c(rep(NA, k), x)[1 : length(x)]
}
lagpad(learner$context,2)
rs1 = glmer(subj_ts ~ lagpad(last_TS,1), data = learner, family = binomial)
rs1 = glmer(subj_ts ~ lagpad(last_TS,1) + (1|lagpad(last_TS) + 1), data = learner, family = binomial)
rs1 = glmer(subj_ts ~ lagpad(last_TS,1) + (1|lagpad(last_TS,1) + 1), data = learner, family = binomial)
rs1 = glmer(subj_ts ~ lagpad(last_TS,1) + (lagpad(last_TS,1) + 1 | id), data = learner, family = binomial)
rs1 = glmer(subj_ts ~
lagpad(last_TS,1) + (lagpad(last_TS,1) + 1 | id), data = learner, family = binomial)
summary(rs1)
learner
describe(learner)
summary(learner)
learner$X
learner$X==1
learner$X<10 = NA
learner$X<10
learner$X<10 = 3
learner(learner$X<10)
learner[learner$X<10]
learner[learner$X<10,X]
learner[learner$X<10,1]
learner[learner$X<10,'X']
learner[learner$X<10,'X']=NA
learner
learner$X
lagpad <- function(x, k) {
if (!is.vector(x))
stop('x must be a vector')
if (!is.numeric(x))
stop('x must be numeric')
if (!is.numeric(k))
stop('k must be numeric')
if (1 != length(k))
stop('k must be a single number')
c(rep(NA, k), x)[1 : length(x)]
x[learner$X<10]=NA
}
lagpad(learner$context,2)
a=lagpad(learner$context,2)
a
lagpad <- function(x, k) {
if (!is.vector(x))
stop('x must be a vector')
if (!is.numeric(x))
stop('x must be numeric')
if (!is.numeric(k))
stop('k must be numeric')
if (1 != length(k))
stop('k must be a single number')
vec = c(rep(NA, k), x)[1 : length(x)]
vec[learner$X<10]=NA
return vec
}
lagpad <- function(x, k,df) {
if (!is.vector(x))
stop('x must be a vector')
if (!is.numeric(x))
stop('x must be numeric')
if (!is.numeric(k))
stop('k must be numeric')
if (1 != length(k))
stop('k must be a single number')
vec = c(rep(NA, k), x)[1 : length(x)]
vec[df$X<10]=NA
return(vec)
}
lagpad(learner$context,3,learner)
lagpad(learner$context,30,learner)
lagpad <- function(x, k,df) {
if (!is.vector(x))
stop('x must be a vector')
if (!is.numeric(x))
stop('x must be numeric')
if (!is.numeric(k))
stop('k must be numeric')
if (1 != length(k))
stop('k must be a single number')
vec = c(rep(NA, k), x)[1 : length(x)]
vec[df$X<k]=NA
return(vec)
}
lagpad(learner$context,30,learner)
length(learner)
size(learner)
dims(learner)
dim(learner)
a=lagpad(learner$context,30,learner)
dim(a)
a
length(a)
dim(a)
dim(learner)
learner$X<30
learner = read.csv('Analysis_Output/learners.csv')
learner$X<30
lagpad(learner$context,30,learner)
rs1 = glmer(subj_ts ~
lagpad(last_TS,1) + (lagpad(last_TS,1) + 1 | id), data = learner, family = binomial)
summary(rs1)
rs1 = glmer(subj_ts ~ context +
last_TS + (last_TS + 1 | id), data = learner, family = binomial)
summary(rs1)
rs1 = glmer(subj_ts ~ context +
last_TS + (last_TS + context + 1 | id), data = learner, family = binomial)
summary(rs1)
rs1 = glmer(subj_ts ~ context +
last_TS + (last_TS + context + 1 | id), data = learner, family = binomial)
summary(rs1)
rs2 = glmer(subj_ts ~ context +
last_TS + (last_TS + context + 1 | id), data = nonlearner, family = binomial)
summary(rs2)
nonlearner = read.csv('Analysis_Output/nonlearners.csv')
rs2 = glmer(subj_ts ~ context +
last_TS + (last_TS + context + 1 | id), data = nonlearner, family = binomial)
summary(rs2)
rs3 = glmer(subj_ts ~ context +
lagpad(context,1,learner)
(lagpad(context,1,learner) + context + 1 | id),
data = learner, family = binomial)
summary(rs3)
lagpad <- function(x, k,df) {
if (!is.vector(x))
stop('x must be a vector')
if (!is.numeric(x))
stop('x must be numeric')
if (!is.numeric(k))
stop('k must be numeric')
if (1 != length(k))
stop('k must be a single number')
vec = c(rep(NA, k), x)[1 : length(x)]
vec[df$X<k]=NA
return(vec)
}
rs3 = glmer(subj_ts ~ context +
lagpad(context,1,learner)
(lagpad(context,1,learner) + context + 1 | id),
data = learner, family = binomial)
rs3 = glmer(subj_ts ~ context +
lagpad(context,1,learner)
(lagpad(learner$context,1,learner) + context + 1 | id),
data = learner, family = binomial)
lagpad(learner$context,1,learner)
rs3 = glmer(subj_ts ~ context +
lagpad(context,1,learner) +
(lagpad(context,1,learner) + context + 1 | id),
data = learner, family = binomial)
summary(rs3)
rs3 = glmer(subj_ts ~ context +
lagpad(context,1,learner) +
lagpad(context,2,learner) +
lagpad(context,3,learner) +
lagpad(context,4,learner) +
lagpad(context,5,learner) +
(lagpad(context,1,learner) +
lagpad(context,2,learner) +
lagpad(context,3,learner) +
lagpad(context,4,learner) +
lagpad(context,5,learner) + context + 1 | id),
data = learner, family = binomial)
summary(rs3)
rs3 = glmer(subj_ts ~ context +
lagpad(context,1,learner) +
lagpad(context,2,learner) +
lagpad(context,3,learner) +
lagpad(context,4,learner) +
lagpad(context,5,learner) +
(lagpad(context,1,learner)+ context + 1 | id),
data = learner, family = binomial)
summary(rs3)
rs3 = glmer(subj_ts ~ context + last_TS
lagpad(context,1,learner) +
lagpad(context,2,learner) +
lagpad(context,3,learner) +
lagpad(context,4,learner) +
lagpad(context,5,learner) +
(lagpad(context,1,learner)+ context + 1 | id),
data = learner, family = binomial)
summary(rs3)
rs3 = glmer(subj_ts ~ context + last_TS
lagpad(context,1,learner) +
lagpad(context,2,learner) +
lagpad(context,3,learner) +
lagpad(context,4,learner) +
lagpad(context,5,learner) +
(lagpad(context,1,learner)+ context + 1 | id),
data = learner, family = binomial)
rs3 = glmer(subj_ts ~ context + last_TS +
lagpad(context,1,learner) +
lagpad(context,2,learner) +
lagpad(context,3,learner) +
lagpad(context,4,learner) +
lagpad(context,5,learner) +
(lagpad(context,1,learner)+ context + 1 | id),
data = learner, family = binomial)
summary(rs3)
rs4 = glmer(subj_ts ~ context +
lagpad(context,1,learner) +
lagpad(context,2,learner) +
lagpad(context,3,learner) +
lagpad(context,4,learner) +
lagpad(context,5,learner) +
(lagpad(context,1,learner) +
+ context + 1 | id),
data = nonlearner, family = binomial)
summary(rs4)
rs4 = glmer(subj_ts ~ context +
lagpad(context,1,nonlearner) +
lagpad(context,2,nonlearner) +
lagpad(context,3,nonlearner) +
lagpad(context,4,nonlearner) +
lagpad(context,5,nonlearner) +
(lagpad(context,1,nonlearner) +
+ context + 1 | id),
data = nonlearner, family = binomial)
summary(rs4)
learner$log_rt = log(learner$rt)
rs5 = lmer(log_rt ~ bias2_certainty + (1+bias2_certainty | id), data = learner)
summary(rs5)
rs3
rs4
summary(rs3)
summary(rs4)
